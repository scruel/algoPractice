package algsPractice.newcoder;

/**
 * Created by Scruel on 2017/3/18.
 * Personal blog : http://blog.csdn.net/scruelt
 * Github : https://github.com/scruel
 * <p>
 * 给定两个已经排好序的数组，A中额外给出了B数组的额外长度，将B并入A，空间复杂度需为1。
 */
public class MeargeAb2_15 {
    public static int[] mergeAB(int[] A, int[] B, int n, int m) {
        // write code here
        int j = m + n - 1;
        int pos = n - 1;
        for (int i = m - 1; i >= 0; i--) {
            while (B[i] < A[pos]) {
                A[j--] = A[pos--];
            }
            A[j--] = B[i];
        }
        return A;
    }

    public static void main(String[] args) {
        for (int a : mergeAB(new int[]{47128, 63739, 81503, 92947, 98169, 99774, 108082, 110040, 111290, 112530, 129271, 146949, 157702, 161189, 173696, 174091, 256783, 270452, 275353, 284662, 296558, 322600, 349757, 387441, 394743, 394957, 413039, 419448, 423240, 425135, 427500, 471774, 489570, 497159, 533609, 543290, 567642, 576943, 585021, 587546, 605202, 611531, 613983, 630482, 643476, 655483, 673826, 683589, 686493, 686550, 687358, 708460, 709115, 724530, 769851, 781840, 784356, 793345, 801417, 812719, 819119, 844855, 853893, 878121, 918212, 922503, 929192, 959600, 965781, 988040, 1013583, 1042549, 1068083, 1081502, 1117601, 1138646, 1150571, 1150914, 1195741, 1209896, 1226440, 1305000, 1315147, 1321842, 1321890, 1403269, 1410747, 1413976, 1439365, 1474259, 1479449, 1487793, 1505507, 1526625, 1528265, 1535091, 1537397, 1544010, 1546295, 1560932, 1611780, 1668805, 1701711, 1703701, 1712588, 1725722, 1747001, 1753403, 1761258, 1761534, 1781229, 1822007, 1822697, 1841248, 1844715, 1871493, 1875047, 1923360, 1931471, 1940206, 1953842, 1957217, 1966676, 2001138, 2028258, 2032433, 2043722, 2061237, 2080031, 2092637, 2110851, 2127164, 2127894, 2136225, 2149547, 2177754, 2209752, 2218566, 2226213, 2241228, 2247200, 2298714, 2303245, 2325068, 2384830, 2403139, 2420218, 2438590, 2443200, 2463916, 2471354, 2483920, 2507700, 2523751, 2524292, 2560469, 2560480, 2566170, 2571308, 2583990, 2614297, 2620383, 2630109, 2673150, 2673670, 2676552, 2684030, 2694572, 2726369, 2741705, 2750694, 2755727, 2844357, 2871374, 2873370, 2875924, 2894422, 2908344, 2929349, 2929852, 2932916, 2936153, 2938289, 2954097, 2964385, 2970719, 3005284, 3014121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, new int[]{144712, 179444, 185396, 199706, 224065, 268779, 359995, 438122, 470680, 477425, 521423, 549255, 648769, 721107, 723239, 789006, 888120, 1104989, 1402820, 1529676, 1591639, 1701017, 1820501, 1829548, 1865618, 1883237, 1904821, 2045735, 2053432, 2086795, 2098654, 2129323, 2129594, 2175869, 2176643, 2206950, 2235965, 2539717, 2643472, 2673728, 2781156, 2867444, 2892817, 2986434}, 188, 44)) {
            System.out.println(a + " ");
        }
    }
}
